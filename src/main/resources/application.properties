spring.application.name=posts-service

# Service-specific Config Parameters
# spring.config.import=optional:configserver:
# Usage: posts-service.userfilter=id,birthDate
posts-service.userfilter=id

# Config for Swagger documentation  available at http://localhost:8080/swagger-ui/index.html#/ or http://localhost:8080/api-docs
springdoc.api-docs.path=/api-docs

logging.level.org.springframework=info
management.endpoints.web.exposure.include=*

# Config parameters for H2 Database
spring.datasource.url=jdbc:h2:mem:testdb;Mode=Oracle
spring.datasource.driverClassName=org.h2.Driver
spring.jpa.defer-datasource-initialization=true
spring.jpa.show-sql=true
spring.h2.console.enabled=true

#spring.datasource.url=jdbc:mysql://localhost:3306/social-media-database
#spring.datasource.username=social-media-user
#spring.datasource.password=dummypassword
#
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# Config parameters for spring security
#spring.security.user.name=username
#spring.security.user.password=password

# \connect social-media-user@localhost:3306
#docker run --detach 
#--env MYSQL_ROOT_PASSWORD=dummypassword 
#--env MYSQL_USER=social-media-user 
#--env MYSQL_PASSWORD=dummypassword 
#--env MYSQL_DATABASE=social-media-database 
#--name mysql 
#--publish 3306:3306 
#mysql:8-oracle
#

# Config parameters for Circuit Breaker

resilience4j.retry.instances.broken-api.maxAttempts=5
## Wait for 1s before retry
resilience4j.retry.instances.broken-api.waitDuration=1s
## Wait for exponential time before each retry
resilience4j.retry.instances.broken-api.enableExponentialBackoff=true

#resilience4j.circuitbreaker.instances.default.failureRateThreshold=90

# Ratelimiter limiting 2 calls in every 10s
resilience4j.ratelimiter.instances.get-one-user-api.limitForPeriod=2
resilience4j.ratelimiter.instances.get-one-user-api.limitRefreshPeriod=10s

# Bulkhead limiting maximum 10 concurrent calls
resilience4j.bulkhead.instances.default.maxConcurrentCalls=10
resilience4j.bulkhead.instances.get-all-users-api.maxConcurrentCalls=10